;; The ZOMB file format grammar in ABNF format.

zomb = decl+

decl = ( kv-pair / macro-def ) separator

;; Key-Value Pairs

kv-pair = string equals value

value = string / ml-string / object / array / macro-expr

object = object-begin [ kv-pair-list ] object-end

kv-pair-list = kv-pair *( separator kv-pair ) [ separator ]

array = array-begin [ value-list ] array-end

value-list = value *( separator value ) [ separator ]

macro-expr = macro-key [ macro-expr-params ] *( macro-accessor )

macro-expr-params = macro-params-begin value-list macro-params-end

macro-accessor = %x2E string

;; Macros

macro-def = macro-key [ macro-def-params ] equals macro-value

macro-key = %x24 string

macro-def-params = macro-params-begin string-list macro-params-end

string-list = string *( separator string ) [ separator ]

macro-value = macro-param / string / ml-string / macro-object / macro-array / macro-macro-expr

macro-param = %x25 string

macro-object = object-begin [ macro-kv-pair-list ] object-end

macro-kv-pair = string equals macro-value

macro-kv-pair-list = macro-kv-pair *( separator macro-kv-pair ) [ separator ]

macro-array = array-begin [ macro-value-list ] array-end

macro-value-list = macro-value *( separator macro-value ) [ separator ]

macro-macro-expr = macro-key [ macro-macro-expr-params ] *( macro-accessor )

macro-macro-expr-params = macro-params-begin macro-value-list macro-params-end

;; Strings

string = bare-string / quoted-string

bare-string = ;; LEFT OFF HERE

;; Padded Delimiters

equals = [ padding ] %x3D [ padding ]

comma = [ padding ] %x2C [ padding ]

object-begin = [ padding ] %x7B [ padding ]

object-end = [ padding ] %x7D [ padding ]

array-begin = [ padding ] %x5B [ padding ]

array-end = [ padding ] %x5D [ padding ]

macro-params-begin [ padding ] %x28 [ padding ]

macro-params-end [ padding ] %x29 [ padding ]

;; Separators

whitespace = %x09 / %x20

newline = %x0A / ( %x0D %x0A )

padding = 1*( whitespace / newline )

separator = comma / padding
